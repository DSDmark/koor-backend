# Generated by Django 4.1.5 on 2024-03-06 12:59

import core.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, db_column='slug', max_length=455, null=True, unique=True)),
                ('description', models.TextField(db_column='description', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
                'db_table': 'AboutUs',
            },
        ),
        migrations.CreateModel(
            name='CategoryLogo',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.BooleanField(blank=True, db_column='status', default=False, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Category Logo',
                'verbose_name_plural': 'Category Logos',
                'db_table': 'CategoryLogo',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, db_column='slug', max_length=455, null=True, unique=True)),
                ('description', models.TextField(db_column='description', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Content',
                'verbose_name_plural': 'Contents',
                'db_table': 'Content',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('question', models.CharField(db_column='question', max_length=255, verbose_name='Question')),
                ('answer', models.TextField(blank=True, db_column='answer', null=True, verbose_name='Answer')),
                ('status', models.BooleanField(db_column='status', default=True, verbose_name='Status')),
                ('role', models.CharField(choices=[('job_seeker', 'Job Seeker'), ('employer', 'Employer'), ('vendor', 'Vendor')], db_column='role', max_length=250, verbose_name='Role')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'db_table': 'FAQ',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='FaqCategory',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, db_column='slug', max_length=455, null=True, unique=True)),
                ('role', models.CharField(choices=[('job_seeker', 'Job Seeker'), ('employer', 'Employer'), ('vendor', 'Vendor')], db_column='role', max_length=250, verbose_name='Role')),
            ],
            options={
                'verbose_name': 'Faq Category',
                'verbose_name_plural': 'Faq Categories',
                'db_table': 'FaqCategory',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='GoogleAddSenseCode',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('page_title', models.CharField(db_column='page_title', max_length=255, verbose_name='Page Title')),
                ('code', models.TextField(blank=True, db_column='code', null=True, verbose_name='Code')),
            ],
            options={
                'verbose_name_plural': 'Google Add Sense Code',
            },
        ),
        migrations.CreateModel(
            name='GooglePlaceApi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_removed', models.BooleanField(default=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('api_key', models.CharField(db_column='api_key', max_length=255, verbose_name='API Key')),
                ('status', models.BooleanField(db_column='status', default=True, verbose_name='Status')),
            ],
            options={
                'verbose_name_plural': 'Google Place Api',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_id', models.CharField(blank=True, db_column='invoice_id', max_length=255, null=True, verbose_name='Invoice Id')),
                ('start_date', models.DateField(blank=True, db_column='start_date', null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, db_column='end_date', null=True, verbose_name='End Date')),
                ('points', models.BigIntegerField(blank=True, db_column='points', default=0, null=True, verbose_name='Points')),
                ('total', models.BigIntegerField(blank=True, db_column='total', default=0, null=True, verbose_name='Total')),
                ('discount', models.BigIntegerField(blank=True, db_column='discount', default=0, null=True, verbose_name='Discount')),
                ('grand_total', models.BigIntegerField(blank=True, db_column='grand_total', default=0, null=True, verbose_name='Grand Total')),
                ('is_send', models.BooleanField(blank=True, db_column='is_send', default=False, null=True, verbose_name='Is Send')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoice',
                'db_table': 'Invoice',
            },
        ),
        migrations.CreateModel(
            name='NewsletterUser',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_column='email', max_length=254, unique=True, verbose_name='Email Address')),
                ('role', models.EmailField(blank=True, db_column='role', default='user', max_length=254, null=True, verbose_name='Role')),
                ('status', models.BooleanField(blank=True, db_column='status', default=False, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Newsletter User',
                'verbose_name_plural': 'Newsletter Users',
                'db_table': 'NewsletterUser',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('benefit', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, db_column='benefit', max_length=450, null=True, verbose_name='Benefit'), blank=True, null=True, size=None)),
                ('price', models.DecimalField(blank=True, db_column='price', decimal_places=2, max_digits=19, null=True, verbose_name='Price')),
                ('credit', models.BigIntegerField(blank=True, db_column='credit', null=True, verbose_name='Credit')),
            ],
            options={
                'verbose_name': 'Package',
                'verbose_name_plural': 'Packages',
                'db_table': 'Packages',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='PointDetection',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.BigIntegerField(blank=True, db_column='points', default=5, null=True, verbose_name='Points')),
            ],
            options={
                'verbose_name': 'Point Detection',
                'verbose_name_plural': 'Points Detection',
                'db_table': 'PointDetection',
            },
        ),
        migrations.CreateModel(
            name='RechargeHistory',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note', models.CharField(blank=True, db_column='note', max_length=255, null=True, verbose_name='Note')),
                ('points', models.BigIntegerField(blank=True, db_column='points', default=5, null=True, verbose_name='Points')),
                ('package', models.CharField(blank=True, choices=[('none', 'None'), ('gold', 'Gold'), ('silver', 'Silver'), ('copper', 'Copper')], db_column='package', default='none', max_length=250, null=True, verbose_name='Package')),
                ('amount', models.BigIntegerField(blank=True, db_column='amount', default=0, null=True, verbose_name='Amount')),
            ],
            options={
                'verbose_name': 'Recharge History',
                'verbose_name_plural': 'Recharge History',
                'db_table': 'RechargeHistory',
            },
        ),
        migrations.CreateModel(
            name='ResourcesContent',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, db_column='slug', max_length=455, null=True, unique=True)),
                ('subtitle', models.CharField(blank=True, db_column='subtitle', max_length=255, null=True, verbose_name='Subtitle')),
                ('description', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, db_column='description', null=True, verbose_name='Description'), blank=True, null=True, size=None)),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'db_table': 'Resources',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Rights',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Rights',
                'verbose_name_plural': 'Rights',
                'db_table': 'Rights',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SMTPSetting',
            fields=[
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('smtp_host', models.CharField(db_column='smtp_host', max_length=255, verbose_name='SMTP Host')),
                ('smtp_user', models.CharField(db_column='smtp_user', max_length=255, verbose_name='SMTP User')),
                ('smtp_port', models.CharField(db_column='smtp_port', max_length=255, verbose_name='SMTP Port')),
                ('smtp_password', models.CharField(db_column='smtp_password', max_length=255, verbose_name='SMTP Password')),
                ('logo', models.FileField(db_column='logo', unique=True, upload_to=core.models.upload_directory_path, verbose_name='Logo')),
            ],
            options={
                'verbose_name': 'SMTP Setting',
                'verbose_name_plural': 'SMTP Settings',
                'db_table': 'SMTPSetting',
            },
        ),
        migrations.CreateModel(
            name='SocialUrl',
            fields=[
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('platform', models.CharField(choices=[('iso_app', 'ISO Application'), ('android_app', 'Android Application'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('linkedin', 'Linkedin'), ('youtube', 'Youtube'), ('twitter', 'Twitter')], db_column='platform', max_length=255, verbose_name='Platform')),
                ('url', models.URLField(db_column='url', verbose_name='Url')),
            ],
            options={
                'verbose_name': 'Social Url',
                'verbose_name_plural': 'Social Urls',
                'db_table': 'SocialUrl',
                'ordering': ['platform'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, db_column='slug', max_length=455, null=True, unique=True)),
                ('client_name', models.CharField(db_column='client_name', max_length=255, verbose_name='Client Name')),
                ('client_company', models.CharField(db_column='client_company', max_length=255, verbose_name='Client Company')),
                ('client_position', models.CharField(db_column='client_position', max_length=255, verbose_name='Client Position')),
                ('description', models.TextField(blank=True, db_column='description', null=True, verbose_name='Description')),
                ('status', models.BooleanField(blank=True, db_column='status', default=False, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'db_table': 'Testimonial',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='UserRights',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, db_column='slug', max_length=455, null=True, unique=True)),
                ('rights_value', models.CharField(blank=True, db_column='rights_value', max_length=255, null=True, verbose_name='Rights Value')),
            ],
            options={
                'verbose_name': 'User Rights',
                'verbose_name_plural': 'User Rights',
                'db_table': 'UserRights',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='UserSubRights',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(blank=True, db_column='active', default=True, null=True, verbose_name='Active')),
                ('title', models.CharField(db_column='title', max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, db_column='slug', max_length=455, null=True, unique=True)),
                ('subrights_value', models.CharField(blank=True, db_column='subrights_value', max_length=255, null=True, verbose_name='Subrights Value')),
            ],
            options={
                'verbose_name': 'User Sub Rights',
                'verbose_name_plural': 'User Sub Rights',
                'db_table': 'UserSubRights',
                'ordering': ['title'],
            },
        ),
    ]
