# Generated by Django 4.1.5 on 2023-02-03 05:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("project_meta", "0003_country_educationlevel_language_skill_city"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("jobs", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="JobDetails",
            fields=[
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                ("is_removed", models.BooleanField(default=False)),
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        blank=True,
                        db_column="active",
                        default=True,
                        null=True,
                        verbose_name="Active",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_column="title", max_length=255, verbose_name="Title"
                    ),
                ),
                (
                    "budget_currency",
                    models.CharField(
                        db_column="budget_currency",
                        default="KES",
                        max_length=5,
                        verbose_name="Budget Currency",
                    ),
                ),
                (
                    "budget_amount",
                    models.DecimalField(
                        db_column="budget_amount",
                        decimal_places=2,
                        max_digits=19,
                        verbose_name="Budget Amount",
                    ),
                ),
                (
                    "budget_pay_period",
                    models.CharField(
                        choices=[
                            ("yearly", "Yearly"),
                            ("quarterly", "Quarterly"),
                            ("monthly", "Monthly"),
                            ("weekly", "Weekly"),
                            ("hourly", "Hourly"),
                        ],
                        db_column="budget_pay_period",
                        max_length=255,
                        verbose_name="Budget Pay Period",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        db_column="description",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "address",
                    models.TextField(db_column="address", verbose_name="Address"),
                ),
                (
                    "is_full_time",
                    models.BooleanField(
                        blank=True,
                        db_column="is_full_time",
                        default=False,
                        null=True,
                        verbose_name="Is Full-time",
                    ),
                ),
                (
                    "is_part_time",
                    models.BooleanField(
                        blank=True,
                        db_column="is_part_time",
                        default=False,
                        null=True,
                        verbose_name="Is Part-time",
                    ),
                ),
                (
                    "has_contract",
                    models.BooleanField(
                        blank=True,
                        db_column="has_contract",
                        default=False,
                        null=True,
                        verbose_name="Has Contract",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        db_column="contact_email",
                        max_length=254,
                        null=True,
                        verbose_name="Contact Email",
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True,
                        db_column="contact_phone",
                        max_length=15,
                        null=True,
                        verbose_name="Contact Phone",
                    ),
                ),
                (
                    "contact_whatsapp",
                    models.CharField(
                        blank=True,
                        db_column="contact_whatsapp",
                        max_length=15,
                        null=True,
                        verbose_name="Contact Whatsapp",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("hold", "Hold"),
                            ("deleted", "Deleted"),
                        ],
                        db_column="status",
                        max_length=25,
                        verbose_name="Status",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        db_column="city",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_city",
                        to="project_meta.city",
                        verbose_name="City",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        db_column="country",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_country",
                        to="project_meta.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "highest_education",
                    models.ForeignKey(
                        blank=True,
                        db_column="highest_education",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_highest_education",
                        to="project_meta.educationlevel",
                        verbose_name="Highest Education",
                    ),
                ),
                (
                    "job_category",
                    models.ManyToManyField(
                        db_column="job_category",
                        limit_choices_to=2,
                        related_name="%(app_label)s_%(class)s_job_category",
                        to="jobs.jobcategory",
                        verbose_name="Job Category",
                    ),
                ),
                (
                    "language",
                    models.ManyToManyField(
                        blank=True,
                        db_column="language",
                        limit_choices_to=3,
                        null=True,
                        related_name="%(app_label)s_%(class)s_language",
                        to="project_meta.language",
                        verbose_name="Language",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modified By",
                    ),
                ),
                (
                    "skill",
                    models.ManyToManyField(
                        db_column="skill",
                        limit_choices_to=2,
                        related_name="%(app_label)s_%(class)s_skill",
                        to="project_meta.skill",
                        verbose_name="Skill",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Detail",
                "verbose_name_plural": "Job Details",
                "db_table": "JobDetails",
            },
        ),
    ]
